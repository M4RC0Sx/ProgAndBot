[project]
name = "progandbot"
version = "0.1.0"
description = ""
authors = [
    {name = "Your Name",email = "you@example.com"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "discord-py (>=2.5.2,<3.0.0)",
    "structlog (>=25.4.0,<26.0.0)",
    "sqlmodel (>=0.0.24,<0.0.25)",
    "alembic (>=1.16.3,<2.0.0)",
    "psycopg[binary] (>=3.2.9,<4.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "alembic-postgresql-enum (>=1.7.0,<2.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.2"
mypy = "^1.16.1"


[tool.ruff]
fix = true
line-length = 88

[tool.ruff.lint]
unfixable = [
    "ERA", # do not autoremove commented out code
]
extend-select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
]
ignore = [
    "ERA001"
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
known-first-party = ["fastapi_react_example_backend"]
required-imports = ["from __future__ import annotations"]

[tool.mypy]
namespace_packages = true
show_error_codes = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]
strict = true
files = ["fastapi_react_example_backend", "tests"]

